#include "gw1ns4c.h"


//Initializes GPIO
void GPIOInit(void)
{
    GPIO_InitTypeDef GPIO_InitType;

    GPIO_InitType.GPIO_Pin = GPIO_Pin_0;
    GPIO_InitType.GPIO_Mode = GPIO_Mode_OUT;
    GPIO_InitType.GPIO_Int = GPIO_Int_Disable;

    GPIO_Init(GPIO0, &GPIO_InitType);

    GPIO_SetBit(GPIO0, GPIO_Pin_0);

}

//delay ms
void delay_ms(__IO uint32_t delay_ms)
{
    for (int i = 0;i < delay_ms;i++)
    {
        while (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk == 0)
        {
            // wait
        }
    }
}

//Initializes UART0
void UartInit(void)
{
    UART_InitTypeDef UART_InitStruct;

    UART_InitStruct.UART_Mode.UARTMode_Tx = ENABLE;
    UART_InitStruct.UART_Mode.UARTMode_Rx = ENABLE;
    UART_InitStruct.UART_Int.UARTInt_Tx = DISABLE;
    UART_InitStruct.UART_Int.UARTInt_Rx = DISABLE;
    UART_InitStruct.UART_Ovr.UARTOvr_Tx = DISABLE;
    UART_InitStruct.UART_Ovr.UARTOvr_Rx = DISABLE;
    UART_InitStruct.UART_Hstm = DISABLE;
    UART_InitStruct.UART_BaudRate = 115200;

    UART_Init(UART0, &UART_InitStruct);
}

void nvicInit(void)
{
    NVIC_InitTypeDef InitTypeDef_NVIC;
    InitTypeDef_NVIC.NVIC_IRQChannel = SysTick_IRQn;
    InitTypeDef_NVIC.NVIC_IRQChannelPreemptionPriority = 1;
    InitTypeDef_NVIC.NVIC_IRQChannelSubPriority = 1;
    InitTypeDef_NVIC.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&InitTypeDef_NVIC);
}

int main(void)
{
    SystemInit();
    SysTick_Config(72000ul - 1);
    GPIOInit();

    while (1)
    {
        GPIO_ResetBit(GPIO0, GPIO_Pin_0);
        delay_ms(500);
        UART_SendChar(UART0, 'a');

        GPIO_SetBit(GPIO0, GPIO_Pin_0);
        delay_ms(500);


        return 0;
    }
}

//Timer0 interrupt handler
void SysTick_Handler(void)
{
    if (UART0->STATE & UART_STATE_RXBF)
    {
        UART_SendChar(UART0, (UART0->DATA));
    }
}
