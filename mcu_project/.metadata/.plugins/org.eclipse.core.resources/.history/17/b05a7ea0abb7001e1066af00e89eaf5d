#include "gw1ns4c.h"
#include "main.h"
#include "scd_inc.h"


//Initializes GPIO
void GPIOInit(void)
{
    GPIO_InitTypeDef GPIO_InitType;

    GPIO_InitType.GPIO_Pin = GPIO_Pin_0;
    GPIO_InitType.GPIO_Mode = GPIO_Mode_OUT;
    GPIO_InitType.GPIO_Int = GPIO_Int_Disable;

    GPIO_Init(GPIO0, &GPIO_InitType);

    GPIO_ResetBit(GPIO0, GPIO_Pin_0);

}

//delay ms
void delay_ms(uint32_t delay_ms)
{
    delay_ms *= 10;
    for (uint32_t i = 0;i < delay_ms;i++)
    {
        while ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == 0)
        {
            // wait
        }
    }
}

//Initializes UART0
void UartInit(void)
{
    UART_InitTypeDef UART_InitStruct;

    UART_InitStruct.UART_Mode.UARTMode_Tx = ENABLE;
    UART_InitStruct.UART_Mode.UARTMode_Rx = ENABLE;
    UART_InitStruct.UART_Int.UARTInt_Tx = DISABLE;
    UART_InitStruct.UART_Int.UARTInt_Rx = ENABLE;
    UART_InitStruct.UART_Ovr.UARTOvr_Tx = DISABLE;
    UART_InitStruct.UART_Ovr.UARTOvr_Rx = DISABLE;
    UART_InitStruct.UART_Hstm = DISABLE;
    UART_InitStruct.UART_BaudRate = 115200;

    UART_Init(UART0, &UART_InitStruct);
}

void nvicInit(void)
{
    NVIC_InitTypeDef InitTypeDef_NVIC;

    NVIC_SetPriorityGrouping(NVIC_PriorityGroup_2);

    // uart Rx
    InitTypeDef_NVIC.NVIC_IRQChannel = UART0_IRQn;
    InitTypeDef_NVIC.NVIC_IRQChannelPreemptionPriority = 1;
    InitTypeDef_NVIC.NVIC_IRQChannelSubPriority = 1;
    InitTypeDef_NVIC.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&InitTypeDef_NVIC);

    // systick
    InitTypeDef_NVIC.NVIC_IRQChannel = SysTick_IRQn;
    InitTypeDef_NVIC.NVIC_IRQChannelPreemptionPriority = 2;
    InitTypeDef_NVIC.NVIC_IRQChannelSubPriority = 1;
    InitTypeDef_NVIC.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&InitTypeDef_NVIC);
}

//Initializes SPI
void SPIInit(void)
{
    SPI_InitTypeDef init_spi;
    // 9MHz
    init_spi.CLKSEL = CLKSEL_CLK_DIV_8;
    init_spi.DIRECTION = SHIFT_DIR_MSB_FIRST;
    init_spi.PHASE = SPI_CPOL_LO;
    init_spi.POLARITY = SPI_CPHA_POSEDGE;

    SPI_Init(&init_spi);
}

float voltAns;
uint16_t adcRawData;
uint32_t ms_cnt;
uint16_t initOk = 0;


int main(void)
{
    SystemInit();
    nvicInit();
    UartInit();
    SysTick_Config(7200ul - 1ul);
    GPIOInit();
    SPIInit();

    // adcInit
    delay_ms(2);
    // 退出复位
    GPIO_SetBit(GPIO0, GPIO_Pin_0);
    delay_ms(10);
    SPI_Select_Slave(0);
    delay_ms(1);
    SPI_Select_Slave(1);
    delay_ms(1);
    initOk = 1;


    while (1)
    {
        if ((UART0->STATE & UART_STATE_TXBF) == 0)
        {
            UART0->DATA = scd_send1Byte(&scd_1);
        }
    }

    return 0;
}

